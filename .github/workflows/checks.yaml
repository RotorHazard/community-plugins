---
name: Checks

on:
  pull_request:
    branches:
      - main
    paths:
      - plugins.json
      - categories.json

env:
  VERSION: "v1"
  DEFAULT_PYTHON: "3.13"

concurrency:
  group: checks-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  preflight:
    name: Preflight
    runs-on: ubuntu-latest
    outputs:
      repository: ${{ steps.check.outputs.repository }}
      action: ${{ steps.check.outputs.action }}
    steps:
      - name: ‚§µÔ∏è Check out code (PR merge commit)
        uses: actions/checkout@v4.2.2
        with:
          ref: refs/pull/${{ github.event.pull_request.number }}/merge
          fetch-depth: 2
      - name: ‚§µÔ∏è Fetch base branch plugins.json
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }} --depth=1
          git show origin/${{ github.event.pull_request.base.ref }}:plugins.json > plugins_old.json
      - name: üèó Set up UV
        uses: astral-sh/setup-uv@v6.3.1
        with:
          version: "latest"
          python-version: ${{ env.DEFAULT_PYTHON }}
          enable-cache: true
      - name: üèó Install project dependencies
        run: uv sync --no-group dev
      - name: üöÄ Determine Repository Changes
        id: check
        run: uv run python scripts/check_preflight.py

  categories:
    name: Category validation
    needs: preflight
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Check out code
        uses: actions/checkout@v4.2.2
      - name: üèó Set up UV
        uses: astral-sh/setup-uv@v6.3.1
        with:
          version: "latest"
          python-version: ${{ env.DEFAULT_PYTHON }}
          enable-cache: true
      - name: üèó Install project dependencies
        run: uv sync --no-group dev
      - name: üöÄ Run validation
        run: |
          ACTION=${{ needs.preflight.outputs.action }}
          REPO=${{ needs.preflight.outputs.repository }}
          if [ -n "$ACTION" ] && [ -n "$REPO" ]; then
            echo "‚ñ∂Ô∏è Running add/remove check and sync check"
            uv run python scripts/check_categories.py --action "$ACTION"
          else
            echo "‚ñ∂Ô∏è Running only sync check (no add/remove detected)"
            uv run python scripts/check_categories.py
          fi
        env:
          REPOSITORY: ${{ needs.preflight.outputs.repository }}

  releases:
    name: Release validation
    if: ${{ needs.preflight.outputs.action == 'add' }}
    needs: preflight
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Check out code
        uses: actions/checkout@v4.2.2
      - name: üèó Set up UV
        uses: astral-sh/setup-uv@v6.3.1
        with:
          version: "latest"
          python-version: ${{ env.DEFAULT_PYTHON }}
          enable-cache: true
      - name: üèó Install project dependencies
        run: uv sync --no-group dev
      - name: üöÄ Run validation
        run: uv run python scripts/check_releases.py --repository="${{ needs.preflight.outputs.repository }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  removed:
    name: Removed validation
    if: ${{ needs.preflight.outputs.action == 'add' }}
    needs: preflight
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Check out code
        uses: actions/checkout@v4.2.2
      - name: üèó Set up UV
        uses: astral-sh/setup-uv@v6.3.1
        with:
          version: "latest"
          python-version: ${{ env.DEFAULT_PYTHON }}
          enable-cache: true
      - name: üèó Install project dependencies
        run: uv sync --no-group dev
      - name: ‚§µÔ∏è Download data from Cloudflare R2
        run: |
          uv run aws s3 cp s3://rotorhazard-community-plugins/${{ env.VERSION }}/removed/repositories.json ./repositories.json --endpoint-url=${{ secrets.CF_R2_ENDPOINT }} || echo "[]" > repositories.json
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.CF_R2_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CF_R2_SECRET_ACCESS_KEY }}
      - name: üöÄ Run validation
        run: uv run python scripts/check_removed.py --data-file repositories.json
        env:
          REPOSITORY: ${{ needs.preflight.outputs.repository }}

  rhfest:
    name: RHFest validation
    if: ${{ needs.preflight.outputs.action == 'add' }}
    needs: preflight
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Clone Added Plugin Repository
        run: git clone --depth 1 "https://github.com/${{ needs.preflight.outputs.repository }}" .
      - name: üöÄ Run RHFest Validation
        uses: docker://ghcr.io/rotorhazard/rhfest-action:v3.0.0
