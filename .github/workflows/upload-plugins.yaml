---
name: Upload plugins to R2

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */2 * * *" # Every 2 hours

env:
  VERSION: "v1"
  DEFAULT_PYTHON: "3.13"

concurrency:
  group: generate-metadata
  cancel-in-progress: true

jobs:
  generate-metadata:
    name: Generate plugin metadata
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Check out code
        uses: actions/checkout@v4.2.2

      - name: üèó Set up UV
        uses: astral-sh/setup-uv@v6.0.0
        with:
          version: "latest"
          python-version: ${{ env.DEFAULT_PYTHON }}
          enable-cache: true

      - name: üèó Install project dependencies
        run: uv sync --no-group dev

      - name: ‚§µÔ∏è Download data from Cloudflare R2
        run: |
          mkdir -p ./output/plugin/diff
          uv run aws s3 cp s3://rotorhazard-community-plugins/${{ env.VERSION }}/plugin/diff/after.json ./output/plugin/diff/before.json --endpoint-url=${{ secrets.CF_R2_ENDPOINT }} || echo "{}" > ./output/plugin/diff/before.json
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.CF_R2_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CF_R2_SECRET_ACCESS_KEY }}

      - name: üèó Generate metadata
        run: |
          uv run python metadata/main.py
          mv ./output/plugin/diff/ ./output/diff/
          mv ./output/plugin/summary.json ./output/summary.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Validate output with JQ
        run: |
          uv run jq -c . output/plugin/data.json
          uv run jq -c . output/plugin/repositories.json

      - name: Generate diff
        run: |
          diff -U 8 output/diff/before.json output/diff/after.json > output/diff/plugin.diff || true
          cat output/diff/plugin.diff

      - name: Upload diff
        uses: actions/github-script@v7.0.1
        with:
          script: |
            const fs = require('fs');
            const diffContents = fs.readFileSync('output/diff/plugin.diff');

            core.summary.addDetails('plugin.diff contents', `\n\n\`\`\`diff\n${diffContents}\`\`\`\n\n`);
            core.summary.write();

      - name: Upload metadata Artifacts
        uses: actions/upload-artifact@v4.6.2
        with:
          name: plugin
          path: |
            output/plugin
            output/diff
            output/summary.json
          if-no-files-found: error
          retention-days: 7

  summarize:
    name: Summarize changes
    needs: generate-metadata
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Download artifacts
        uses: actions/download-artifact@v4.3.0
        with:
          name: plugin
          path: output

      - name: Display total summary
        uses: actions/github-script@v7.0.1
        with:
          script: |
            const fs = require('fs');
            const summaryData = JSON.parse(fs.readFileSync('output/summary.json', 'utf-8'));

            core.summary.addTable([
              [{data: 'Metric', header: true}, {data: 'Value', header: true}],
              ['Total Plugins', `${summaryData.total_plugins}`],
              ['Valid Plugins', `${summaryData.valid_plugins}`],
              ['Archived Plugins', `${summaryData.archived_plugins}`],
              ['Renamed Plugins', `${summaryData.renamed_plugins}`],
              ['Skipped Plugins', `${summaryData.skipped_plugins}`],
              ['Execution Time (s)', `${summaryData.execution_time_seconds}`],
            ])
            .write();

  publish:
    name: Publish RHCS data
    needs: generate-metadata
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Check out code
        uses: actions/checkout@v4.2.2

      - name: üèó Set up UV
        uses: astral-sh/setup-uv@v6.0.0
        with:
          version: "latest"
          python-version: ${{ env.DEFAULT_PYTHON }}
          enable-cache: true

      - name: üèó Install project dependencies
        run: uv sync --no-group dev

      - name: ‚§µÔ∏è Download artifacts
        uses: actions/download-artifact@v4.3.0
        with:
          name: plugin
          path: output

      - name: ‚§¥Ô∏è Upload data to Cloudflare R2
        run: |
          uv run aws s3 sync \
            output/plugin \
            s3://rotorhazard-community-plugins/${{ env.VERSION }}/plugin \
            --endpoint-url=${{ secrets.CF_R2_ENDPOINT }}

          uv run aws s3 cp \
            output/diff/after.json \
            s3://rotorhazard-community-plugins/${{ env.VERSION }}/plugin/diff/after.json \
            --endpoint-url=${{ secrets.CF_R2_ENDPOINT }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.CF_R2_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CF_R2_SECRET_ACCESS_KEY }}

      - name: Bust Cloudflare cache
        run: |
          curl --silent --show-error --fail -X POST \
            "https://api.cloudflare.com/client/v4/zones/${{ secrets.CF_ZONE_ID }}/purge_cache" \
            -H "Authorization: Bearer ${{ secrets.CF_BUST_CACHE_TOKEN }}" \
            -H "Content-Type: application/json" \
            --data '{"purge_everything":true}'
